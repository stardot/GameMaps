The file "5" contains the map data.

Starting at 0x13, the first byte in map data is 0x40. The bit set appears to
indicate that the tile specified by the rest of the byte is used to fill the
tiles in the map until the next specified tile is used.

At 0x14, the byte is 0x17 (23), and since each map row is 20 tiles wide, this
indicates that there should be 1 row and 3 squares of the fill tile.

The bytes at 0x15, 0x16 and 0x17 are tile numbers.

At 0x18, the byte is 0xb2, which specifies a gap between the previous tiles and
the next ones, whether on the same row or on the next row. The top bit
indicates that there is a gap, the next bit is clear, and the next three bits
(two from the top half of the byte and one from the second half) are the number
of tiles in the gap. The remaining three bits are the tile to use - this is
different to the tile number in the fill byte.

  0xb2 = 1011 0010
         ||    |
         ||    --- tile number
         |----- gap size (7)
         - gap

Tile numbers

00  blank
01  top-left edge
02  top edge
03  top-right edge
04  right edge
05  left edge
06  bottom-left edge
07  bottom edge
08  bottom-right edge
09  bottom-right facing corner
0a  bottom-left facing corner
0b  top-right facing corner
0c  top-left facing corner
0d  top-left blue-edged hole
0e  top-right blue-edged hole
0f  bottom-left blue-edged hole
10  bottom-right blue-edged hole
11  left blue-edged hole
12  right blue-edged hole
13  red square on green-blue background
14  red tile with top-left O
15  red tile with top-right O
16  red tile with bottom-left O
17  red tile with bottom-right O
18  red tile with green border
19  red tile with bottom-right green area
1a  red tile with bottom-left green area
1b  red tile with top-right green area
1c  red tile with top-left green area
1d  solid green tile
1e  blue tile with green border
1f  red tile with green border and blue walls
20  explosion 1
21  explosion 2
22  top-left blue-edged hole with red centre
23  top-right blue-edged hole with red centre
24  bottom-left blue-edged hole with red centre
25  bottom-right blue-edged hole with red centre
26  green-blue tile with red border
27  bottom-right blue-edged ragged hole
28  red-green striped tile
29  blue hexagonal tiles with bottom-right red-green area
2a  blue hexagonal tiles with bottom-left red-green area
2b  blue hexagonal tiles with top-right red-green area
2c  blue hexagonal tiles with top-left red-green area
2d  blue hexagonal tiles
2e  blue-green tile with green border
2f  bottom blue-edged hole
30  top blue-edged hole
31  unknown
32  unknown
33  unknown
34  unknown
35  unknown
36  satellite dish
37  red sphere
38  red tile with green border and blue building (destructible)
39  blue tile with red-green eye motif (destructible)
3a  red tile with green symbol (destructible)
3b  blue tile with green O building (destructible)
3c  blue tile with green devil rock eye structure (destructible)
3d  green tile with red border and blue question mark symbol (destructible)
3e  green tile with red border and blue + symbol (destructible)
3f  green tile with red border and black X symbol (destructible)

The initial bytes in the file appear to control screen colours, masking of
tiles and possibly timing. See later for discoveries about this.

At 0x173, the byte 0xc8 (200) is followed by a series of 0x9X bytes and tile
numbers.

Looking at 0x19bb (0xf1) in the devil rock formation, the span of tiles is
14 in length, which means that three bits from the top four are used for the
gap size along with the top bit from the second 4 bits.

At 0x1981 (0xb0), the span is 6 blank tiles.
At 0x1995 (0xa5), the span is 4 of tile 0x19.
At 0x1996 (0xa6), the span is 4 of tile 0x1a.
At 0x199c (0xb4), the span is 6 of tile 0x18.
At 0x19a2 (0x91), the span is 2 of tile 0x3b.
At 0x19a3 (0x9f), the span is 3 of tile 0x1b.
At 0x19a4 (0x5c), the span should be 3 of tile 0x1c.
At 0x19bb (0xf1), the span is 14 O tiles (0x3b).

At 0x19a4, the span is generated by a combination of 0x40 and 0x1c, with the
following byte at 0x19a5 (0x03) indicating the length of the span.

Modifying the 0x9X, 0xaX and 0xbX bytes to compare 0x91, 0xa1 and 0xb1 show
that they all produce the same tile (0x3b), so perhaps there is a table of
tiles for those used in spans which might look like this:

0   0x00 (blank)
1   0x3b (O)
2   0x1d (solid green tile)
3   0x07 (bottom edge)
4   0x18 (red tile)
5   0x19 (red tile with bottom-right green area)
6   0x1a (red tile with bottom-left green area)
7   0x1b (red tile with top-right green area)

The 0x5c span at 0x19a4 is required because there are no more entries in this
table.

This table appears at 0x1971.

At 0x31 (0x90) we expect a span of two containing blank tiles (0), but instead
we see red tiles (0x18) (4 in the table above), so we are looking for a table
that starts with 0x18. This may be the information starting at 0x03 (0x18) and
the reason why certain tiles changed when experimenting with the bytes at the
start of the file. If so, then we would expect the following table to apply to
the first level:

0   0x18 (red tile)
1   0x1d (solid green tile)
2   0x00 (blank)
3   0x2e (blue-green tile with green border)
4   0x38 (red tile with green border and blue building)
5   0x3d (green tile with red border and blue question mark symbol)
6   0x3b (blue tile with green O building)
7   0x02 (top edge)

At 0x12c3 (0x7d), we see question marks, but these do not appear to be the ones
from the first level. This is because the table for the first level is
different to that for the devil rock section.

Looking for the end of the first level, we note that the devil rock section is
preceded by 0x80 (at 0x196d) and three bytes before the table. Looking at the
start of the file, we assume that the map data starts 19 bytes after the level
data and look-up table. In the devil rock section, this would result in data
starting at 0x1980 (0xb0).

In other parts of the file, we see 0x80 bytes: at 0x06e0, 0x0cec, 0x1310,
0x196d, 0x1a04, 0x1c4e, and at 0x1e73, which is the end of the file.

We assume that the bytes preceding the look-up table define the colours of each
level. These are as follows:

0x0000  c4 7b fd  (red, green, blue)
0x06e1  c7 b7 dd  (red, yellow, blue)
0x0ced  cb 3b df  (yellow, blue, green)
0x1311  cd db d1  (white, blue, red)
0x196e  10 7b fd  (red, green, blue)
0x1a05  52 7b f9
0x1c4f  55 9f d5

Each look-up table is also followed by 8 bytes before the level data begins.

0x000b  1a 1e 1f 00 00 00 00 00
0x06ec  0c 14 03 04 05 06 00 00
0x0cf8  11 12 13 15 14 05 1b 1d
0x1318  09 0a 1f 15 1d 1b 1c 1e
0x1979  00 00 00 00 00 00 00 00
0x1a10  0b 0c 0d 0e 0f 03 00 00
0x1c5a  0b 0c 0d 0e 0f 1e 1f 05


The file "2" appears to contain title graphics.
The file "3" appears to contain alien attack formation data.
The file "4" appears to contain sprite data.

The sprite data is not laid out in a straightforward manner. Loading it into
a MODE 5 screen doesn't reveal any obvious patterns. However, blanking out
spans of it using null bytes causes parts of sprites to be blanked out in
the game.

Erasing the bottom-right half-rows of the red tile with green border sprite
involves writing null bytes to the following bytes of data in the "4" file:

  -40 bottom row
 -104 row above
 ...
 -40 - (7 * 64) top row of bottom-right quadrant

Originally, spans of null bytes were written to establish approximately where
sprite definitions were located in the file.

Continuing to write null bytes in steps of 64 bytes from the offsets
overwritten here causes the bottom-left quadrant to be erased (8 more rows),
then the top-right quadrant, then the top-left quadrant. Each tile is 32 bytes
in size.
